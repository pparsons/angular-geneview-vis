!function(){"use strict";!function(){angular.module("geneview",[]).provider("geneview",function(){this.version="0.2.5",this.setServer=function(newServer){this.server=newServer},this.setGeneClickAction=function(actionArg){this.geneClickAction=actionArg},this.setGeneContextMenu=function(actionArg){this.geneContextMenu=actionArg},this.setPhenotypeClickAction=function(actionArg){this.phenotypeClickAction=actionArg},this.setPhenotypeContextMenu=function(actionArg){this.phenotypeContextMenu=actionArg},this.$get=function(){return this}})}(),function(){angular.module("geneview").factory("geneLoader",["$http","geneview",function($http,config){return{getGenes:function(chr,start,stop,callID,cb){var params={chr:chr,start:start,stop:stop};return $http({method:"GET",url:"//"+config.server+"/getgenes.php",params:params,responseType:"json",cache:!0}).success(function(data,status,headers,config){cb(data,callID.id)}).error(function(data,status,headers,config){cb({err:"Failed to load genes. Connection failed."})})}}}]).factory("geneManager",[function(){function findFreeTrack(start,stop){for(var collide,trackNo=0,i=0;i<geneDB.length;i++){collide=!1;for(var j=0;j<geneDB[i].length;j++){var gene=geneDB[i][j];if(gene.stop>=start&&gene.start<=stop){trackNo++,collide=!0;break}}if(!collide)return trackNo}return trackNo}function register(gene){var trackNo=findFreeTrack(gene.start,gene.stop);return"undefined"==typeof geneDB[trackNo]&&(geneDB[trackNo]=[]),geneDB[trackNo].push(gene),trackNo}function process(data,boundFrom,boundTo){function isBadVar(res){return null===res||"undefined"==typeof res||""===res}0!==geneDB.length&&(geneDB.length=0);for(var sanData=[],i=data.length-1;i>=0;i--){var start=data[i].start,end=data[i].end;if(!(isBadVar(start)||isBadVar(end)||start>=boundTo||boundFrom>=end)){if(parseInt(data[i].end)<parseInt(data[i].start)){var ts=data[i].start;data[i].start=data[i].end,data[i].end=ts}var nModel={};nModel.gene=data[i],nModel.track=register({start:+data[i].start,stop:+data[i].end}),sanData.push(nModel)}}return sanData}var geneDB=[];return{process:process}}]).factory("phenotypeLoader",["$q","$http","geneview",function($q,$http,config){function loadPhenotypes(data){for(var promises=[],i=0;i<data.length;i++)!function(){var defer=$q.defer(),promise=http.omim(data[i].gene.symbol).then(function(res){var data=null;try{if(-1!==res.data.omim.searchResponse.endIndex){var gene=res.data.omim.searchResponse.entryList[0].entry;if("undefined"!=typeof gene.geneMap&&"undefined"!=typeof gene.geneMap.phenotypeMapList){var symbol=gene.matches,phenotypes=gene.geneMap.phenotypeMapList,geneStart=gene.geneMap.chromosomeLocationStart;data={symbol:symbol,phenotypes:phenotypes,start:geneStart}}}}catch(e){defer.resolve(null)}return defer.resolve(data),defer.promise});promises.push(promise)}(i);return $q.all(promises)}var http={omim:function(gene){return $http({method:"get",url:"//"+config.server+"/gen2phen.php",headers:{"Content-Type":"application/x-www-form-urlencoded"},params:{gene:gene}})}};return{load:loadPhenotypes}}]).factory("gen2Phen",["$http","$rootScope",function($http,$rootScope){return{omim:function(gene){return $http({method:"get",url:"//"+$rootScope.server+"/soscip/api/gen2phen.php",headers:{"Content-Type":"application/x-www-form-urlencoded"},params:{gene:gene}})},lit:function(gene){var searchParams={core:"medline-citations",handler:"select",searchFields:JSON.stringify(["genes"]),query:gene,years:{min:1950,max:2015},start:0,rows:100,retFields:"phenotypes"};return $http({method:"get",url:"//"+$rootScope.server+"/soscip/api/search.php",headers:{"Content-Type":"application/x-www-form-urlencoded"},params:searchParams})}}}]).factory("articleStatLoader",["$http","$rootScope",function($http,$rootScope){return{getArticleCount:function(genes,cb){return $http.get("//"+$rootScope.server+"/soscip/api/genearticlestats.php?genes="+genes).success(function(d){cb(d)})}}}])}(),function(){angular.module("geneview").directive("geneview",["cytochromosome","geneview","geneLoader","phenotypeLoader","articleStatLoader","geneManager",function(cytochromosome,config,geneLoader,phenotypeLoader,articleStatLoader,geneManager){function link(scope,element,attrs,chrAPI){function updateRender(){scope.render();var s=chr.getSelections()[0];scope.updateSelectorMap([+s.start,+s.stop])}function getSensitivityValue(start,end){var defaultMax=1e6,s=.1*(end-start);return s>defaultMax?defaultMax:s}function chrgvmap(){var chrTarget=chr.getSVGTarget();gvmapContainer=chrTarget.append("g").classed("geneview-map",!0).attr("transform","translate(0,60)");var gvpoly=gvmapContainer.append("polygon"),chrmax=chr.getMaxBasepair(),chrScale=d3.scale.linear().domain([1,chrmax]).range([0,scope.width]),gvScale=d3.scale.linear().range([0,+scope.width]);scope.updateSelectorMap=function(arg){var selStart=arg[0],selStop=arg[1],sensitivity=Math.round(getSensitivityValue(selStart,selStop)),ds=selStart-sensitivity,de=selStop+sensitivity;gvScale.domain([ds,de]);var p1x=chrScale(selStop),p1y=0,p2x=chrScale(selStart)+14,p2y=0,p3x=gvScale(selStart),p3y=19,p4x=gvScale(selStop),p4y=19;gvpoly.attr("points",p1x+","+p1y+" "+p2x+","+p2y+" "+p3x+","+p3y+" "+p4x+","+p4y).style({fill:"#666666",opacity:.3,stroke:"black","stroke-width":1})}}function initgvmap(){gvinit||(chrgvmap(),gvinit=!0)}function drawBands(bands){var LABEL_WIDTH=26,band=svgTarget.append("g").classed("geneview-bands",!0).attr("transform","translate(0,"+SD_1COL_HEIGHT+")").selectAll("g").data(bands).enter().append("g");band.append("rect").attr("x",function(d){return scope.xscale(+d.bp_start)}).attr("height",SD_1COL_HEIGHT).attr("width",function(d){return scope.xscale(d.bp_stop)-scope.xscale(d.bp_start)}).style({stroke:"#d9d9d9","stroke-width":"0.5"}).style("fill",function(d){return cyto_chr.getStainColour(d.stain,d.density)}),band.append("text").text(function(d){var bandw=scope.xscale(d.bp_stop)-scope.xscale(d.bp_start);return LABEL_WIDTH>bandw?"":d.arm+d.band}).attr("x",function(d){var s=+d.bp_start<scope.boundFrom?scope.boundFrom:+d.bp_start,e=+d.bp_stop<scope.boundTo?+d.bp_stop:scope.boundTo,mid=s+(e-s)/2;return scope.xscale(mid)-LABEL_WIDTH/2}).attr("y",13).style("fill",function(d){return"gpos"===d.stain||+d.density>50||"acen"===d.stain?"#ededed":void 0})}function updateStatusText(text,append){if(scope.showStatus)if(append){var prev=statusText.text();statusText.text(prev+text)}else statusText.text(text)}function drawStatusBar(){scope.showStatus&&(statusBar=svgTarget.append("g").attr("transform","translate(0,"+(scope.height-SD_1COL_HEIGHT)+")"),statusBar.append("rect").classed("geneview-statusbar",!0).attr("fill","#ededed").attr("width",scope.width-2).attr("height",SD_1COL_HEIGHT-2),statusText=statusBar.append("text").attr("transform","translate(5,14)"))}function drawScale(){var zmAxis=d3.svg.axis().tickFormat(d3.format("s")).orient("top").scale(scope.xscale);axis=svgTarget.append("g").classed("geneview-scale",!0).attr("transform","translate(0,"+SD_1COL_HEIGHT+")").call(zmAxis)}function drawGenes(geneDataSet){var genes=svgTarget.append("g").attr("transform","translate(0,"+GENES_YSHIFT+")").selectAll("g").data(geneDataSet).enter().append("g");genes.append("rect").classed("gene",!0).attr("id",function(d){return"gene_"+d.gene.symbol}).attr("height",SD_1COL_HEIGHT/2).attr("x",function(d){return d3.min([scope.xscale(+d.gene.start),scope.xscale(+d.gene.end)])}).attr("y",function(d){return(+d.track+1)*SD_1COL_HEIGHT}).attr("width",0).transition().delay(function(d,i){return 10*i}).duration(300).attr("width",function(d){var a=scope.xscale(+d.gene.start)-scope.xscale(+d.gene.end),b=scope.xscale(+d.gene.end)-scope.xscale(+d.gene.start),w=d3.max([a,b]);return 1>w?2:w}),genes.append("title").text(function(d){return d.gene.symbol}),genes.on("mouseover",function(d){geneTip.show(d,this)}).on("mouseout",geneTip.hide).on("click",function(d){updateDetailInfo({gene:d},-1)}),genes.each(function(d){geneDB[d.gene.symbol]=d}),geneline=drawBarrierLine.call(svgTarget,0)}function updateContainerHeights(totalGeneTracks){function updateBarrierLines(y){void 0!==this&&(this.attr("y1",y),this.attr("y2",y))}var yShift=(totalGeneTracks+1)*SD_1COL_HEIGHT+4*SD_1COL_HEIGHT,actHeight=scope.phenotypes?yShift+PHENOTYPES_HEIGHT:yShift;scope.detailWindow&&(actHeight+=DETAIL_WIN_HEIGHT),divParent.style("height",actHeight+"px"),svgTarget.transition().attr("height",actHeight),scope.showStatus&&statusBar.attr("transform","translate(0,"+(actHeight-SD_1COL_HEIGHT)+")");var extraShift=scope.showStatus?0:SD_1COL_HEIGHT,extraShiftInv=scope.showStatus?SD_1COL_HEIGHT:0;axis.selectAll(".tick line").attr("y2",yShift+extraShift-2*SD_1COL_HEIGHT),updateBarrierLines.call(geneline,yShift-SD_1COL_HEIGHT),scope.detailWindow&&updateBarrierLines.call(detailLine,actHeight-DETAIL_WIN_HEIGHT),svgTarget.selectAll(".sensitivityBorders").attr("height",yShift-extraShiftInv),currentHeights={geneWindowHeight:yShift,fullSVGHeight:actHeight}}function drawBarrierLine(ycoord){return this.append("line").attr("x1",0).attr("y1",ycoord).attr("x2",scope.width).attr("y2",ycoord).attr("stroke","#d4d4d4").attr("stroke-width",1)}function drawSensitivityBorders(){var borders=svgTarget.append("g"),styleObj={fill:"#666666",opacity:.2},height=scope.showStatus?scope.height-SD_1COL_HEIGHT:scope.height,w=scope.xscale(scope.selectorStart)-scope.xscale(scope.boundFrom);borders.append("rect").classed("sensitivityBorders",!0).attr("x",scope.xscale(scope.boundFrom)).attr("y",0).attr("width",w).attr("height",height).style(styleObj),borders.append("rect").classed("sensitivityBorders",!0).attr("x",function(){return scope.xscale(scope.boundTo)-w}).attr("y",0).attr("width",w).attr("height",height).style(styleObj)}function extractGeneSymbol(genes){for(var r="",i=0;i<genes.length;i++)r=r.concat(genes[i].gene.symbol+";");return r=r.substr(0,r.length-1)}function processGeneArticleData(geneData,articleData){for(var start,end,count=0,res=[],i=0;i<geneData.length;i++){var geneSymbol=geneData[i].gene.symbol;articleData.hasOwnProperty(geneSymbol)&&(count=articleData[geneSymbol],start=+geneData[i].gene.start,end=+geneData[i].gene.end);var mid=(start+end)/2;isNaN(mid)||res.push({gene:geneSymbol,articleCount:count,midLocation:(start+end)/2})}return res}function preprocessPhenoData(response){var dataSet=[],res=response.filter(function(e){return null===e?!1:!0});if(res.length>0){for(var i=0;i<res.length;i++){var geneSymbol=res[i].symbol.toUpperCase();geneDB.hasOwnProperty(geneSymbol)&&dataSet.push({gene:geneDB[geneSymbol],phenotypes:res[i].phenotypes})}dataSet=_.uniq(dataSet,function(n){return n.gene.gene.symbol}),dataSet.sort(function(a,b){return+a.gene.gene.start<+b.gene.gene.start?1:+a.gene.gene.start>+b.gene.gene.start?-1:0})}return dataSet}function blackText(){d3.select(this).style("cursor","default").style("fill","black")}function highlightText(){d3.select(this).style("cursor","pointer").style("fill","steelblue")}function drawPhenotypes(data,currentHeights){function domDraw(response){function drawPhenotype(lastPos,useCluster){function appendPhenoText(text,i,xpos,cluster){function hideDetails(i){phenoTip.hide(),geneTip.hide(geneData,domgene),blackText.call(this),lineCache[i].attr("stroke","#d4d4d4")}function showDetails(d,i){lineCache[i].attr("stroke","steelblue"),highlightText.call(this),cluster&&phenoTip.show(d),geneTip.show(geneData,domgene)}var data=this.datum(),geneData=data.gene,domgene=svgTarget.select("#gene_"+geneData.gene.symbol)[0][0],ptext=this.append("text").text(text).attr("transform","translate("+(xpos+12)+","+(margin.top+15)+")rotate(25)");scope.detailWindow&&ptext.on("mouseover",function(d){showDetails.call(this,d,i)}).on("mouseout",function(){hideDetails.call(this,i)}).on("click",function(d){updateDetailInfo(d,i)}).on("contextmenu",function(d){function makeItem(title,i){return{title:title,action:function(){updateDetailInfo(d,i)}}}for(var menu=[],j=0;j<data.phenotypes.length;j++){var p=data.phenotypes[j].phenotypeMap;menu.push(makeItem(p.phenotype,j))}d3.contextMenu(menu)(d,i)})}function drawline(){return this.append("line").attr("stroke","#d4d4d4").attr("stroke-width","1").attr("x1",xpos).attr("y1",margin.top).attr("x2",geneX+geneWidth/2).attr("y2",-(currentHeights.geneWindowHeight-SD_1COL_HEIGHT)+GENES_YSHIFT+geneY+10)}var data=this.datum(),d3gene=svgTarget.select("#gene_"+data.gene.gene.symbol);try{var geneX=+d3gene.attr("x"),geneY=+d3gene.attr("y")}catch(e){return}var xpos,geneWidth=+scope.xscale(data.gene.gene.end)-+scope.xscale(data.gene.gene.start),margin={top:20},lineCache=[];if(useCluster){xpos=lastPos.xPOS+=50,lineCache.push(drawline.call(this)),this.append("circle").attr("fill","#666666").attr("r",10).attr("cx",xpos).attr("cy",margin.top);var clusterCountOffset=data.phenotypes.length>=10?5:3;this.append("text").text(data.phenotypes.length).attr("fill","white").attr("x",xpos-clusterCountOffset).attr("y",margin.top+clusterCountOffset),appendPhenoText.call(this,data.gene.gene.symbol+" cluster",0,xpos,!0)}else for(var i=0;i<data.phenotypes.length;i++){{data.phenotypes[i].phenotypeMap}xpos=lastPos.xPOS+=50,lineCache.push(drawline.call(this)),this.append("circle").attr("fill",function(d){return getPhenoColor(d.phenotypes[i].phenotypeMap.phenotype)}).attr("r",5).attr("cx",xpos).attr("cy",margin.top),appendPhenoText.call(this,data.phenotypes[i].phenotypeMap.phenotype,i,xpos,!1)}}for(var data=preprocessPhenoData(response),phenotypes=svgTarget.append("g").attr("transform","translate(0,"+(currentHeights.geneWindowHeight-SD_1COL_HEIGHT)+")").selectAll("g").data(data).enter().append("g").classed("phenotype",!0),i=0;i<data.length;i++)totalPhenotypes+=data[i].phenotypes.length;var PX_PER_PHENOTYPE=59,overflow=totalPhenotypes*PX_PER_PHENOTYPE>=scope.width?!0:!1,lastPos={xPOS:-30};lastPos.xPOS=overflow?(scope.width-data.length*PX_PER_PHENOTYPE)/2:(scope.width-totalPhenotypes*PX_PER_PHENOTYPE)/2,lastPos.xPOS<-30&&(lastPos.xPOS=-30);for(var k=phenotypes[0].length-1;k>=0;k--){var d=d3.select(phenotypes[0][k]),totalPhenoTypes=d.datum().phenotypes.length;overflow&&1!==totalPhenoTypes?drawPhenotype.call(d,lastPos,!0):drawPhenotype.call(d,lastPos,!1)}updateStatusText(" Phenotypes: "+totalPhenotypes,!0)}var totalPhenotypes=0;phenotypeLoader.load(data)["catch"](function(e){console.log(e)}).then(domDraw)}function getPhenoColor(p){var p1=p.charAt(0);return"{"===p1?"#E9AEC8":"?"===p1?"#C5DB76":"["===p1?"#C5DB76":"#9ECEE4"}function getPhenoDisorderType(p){var p1=p.charAt(0);return"{"===p1?"Susceptibility to multifactorial disorders or to infection":"?"===p1?"Unconfirmed":"["===p1?"Nondiease":"N/A"}function updateDetailInfo(model,i){var gene=model.gene.gene,gsa=gene.synonyms.split(", "),desc=gene.desc.split(" "),gsy_1=gsa.slice(0,8).join(", "),gsy_2=gsa.slice(8,gsa.length).join(", "),dsa_1=desc.slice(0,8).join(" "),dsa_2=desc.slice(8,desc.length).join(" ");if(dwObjects.gst1.text(gsy_1),dwObjects.gst2.text(gsy_2),dwObjects.gd1.text(dsa_1),dwObjects.gd2.text(dsa_2),dwObjects.geneTitle.text(gene.symbol),dwObjects.geneLoci.text(gene.cytloc+" ["+gene.start+" - "+gene.end+"]"),dwObjects.lrect.style("fill","#ffb006"),i>=0){var pheno=model.phenotypes[i].phenotypeMap;dwObjects.phenoSymbol.text(pheno.phenotype).on("click",function(){config.phenotypeClickAction(pheno)}),dwObjects.phenoType.text("Disorder: "+getPhenoDisorderType(pheno.phenotype)),dwObjects.phenoInheritance.text("Inheritance: "+(null===pheno.phenotypeInheritance?"N/A":pheno.phenotypeInheritance)),dwObjects.rrect.style("fill",getPhenoColor(pheno.phenotype)),dwObjects.rrect.attr("width",15)}else dwObjects.phenoSymbol.text(""),dwObjects.phenoType.text(""),dwObjects.phenoInheritance.text(""),dwObjects.rrect.attr("width",0)}function drawDetailWindow(){function drawText(x,y,size,testtext){return dv_t.append("text").style("font-size",size+"px").attr("x",x).attr("y",y)}var dv=svgTarget.append("g").attr("transform","translate(0,"+(currentHeights.fullSVGHeight-DETAIL_WIN_HEIGHT)+")"),dv_t=dv.append("g").attr("transform","translate(35,0)");drawBarrierLine.call(svgTarget,currentHeights.fullSVGHeight-DETAIL_WIN_HEIGHT);var geneX=0,geneY=30,phenoX=430,phenoY=30;dwObjects.lrect=dv.append("rect").attr("x",0).attr("y",0).attr("width",15).attr("height",DETAIL_WIN_HEIGHT-20).style("fill","#ffb006").style("fill","white"),dwObjects.geneTitle=drawText(geneX,geneY,15,"GHR").on("mouseover",function(){highlightText.call(this)}).on("mouseout",function(){blackText.call(this)}).on("click",function(){var title=d3.select(this).text(),d=geneDB[title].gene;"function"==typeof config.geneClickAction&&config.geneClickAction(d)}).on("contextmenu",function(){"undefined"!=typeof config.geneContextMenu&&d3.contextMenu(config.geneContextMenu)()}),dwObjects.geneSynonyms=drawText(geneX,geneY,11,"GHAR, ADER"),dwObjects.gst1=dwObjects.geneSynonyms.append("tspan").attr("x",0).attr("y",geneY+5).attr("x","0").attr("dy","1.2em"),dwObjects.gst2=dwObjects.geneSynonyms.append("tspan").attr("x",30).attr("y",geneY+20).attr("x","0").attr("dy","1.2em"),dwObjects.geneDesc=drawText(geneX,geneY+45,11,"long dexcla;ksdjf;lask "),dwObjects.gd1=dwObjects.geneDesc.append("tspan").attr("x",0).attr("y",geneY+45).attr("x","0").attr("dy","1.2em"),dwObjects.gd2=dwObjects.geneDesc.append("tspan").attr("x",0).attr("y",geneY+60).attr("x","0").attr("dy","1.2em"),dwObjects.geneLoci=drawText(geneX,geneY+90,11,":1232 p3232"),dwObjects.phenoSymbol=drawText(phenoX,phenoY,13,"Mental retardation, autosoman recessive").on("mouseover",function(){highlightText.call(this)}).on("mouseout",function(){blackText.call(this)}).on("contextmenu",function(){"undefined"!=typeof config.phenotypeContextMenu&&d3.contextMenu(config.phenotypeContextMenu)()}),dwObjects.phenoType=drawText(phenoX,phenoY+30,11,"Disorder: nondisease"),dwObjects.phenoInheritance=drawText(phenoX,phenoY+45,11,"Inheritance: Autosomal Dominant"),dwObjects.rrect=dv.append("rect").attr("x",phenoX-5).attr("y",0).attr("width",15).attr("height",DETAIL_WIN_HEIGHT-20).style("fill","white")}function CallID(id){this.id=id}var svgTarget,geneline,detailLine,axis,statusBar,statusText,geneTip,phenoTip,gvmapContainer,divParent,currentHeights,geneDB={},SD_1COL_HEIGHT=20,GENES_YSHIFT=34,PHENOTYPES_HEIGHT=225,DETAIL_WIN_HEIGHT=160,chr=cytochromosome.build();chr.target(d3.select(element[0]).select(".chromosome")).segment(scope.chr).height(17).resolution(550).useRelative(!1).showAxis(!0).render(),chr.on("bandclick",function(d){updateRender(),scope.$emit("bandclick",d)}),chr.on("selectorend",function(d){scope.render(),scope.$emit("selectorend",d)}),chr.on("selectordelete",function(d){init(),gvmapContainer.remove(),gvinit=!1,scope.$emit("selectordelete",d)}),scope.$on("geneview:render",function(e,a){chr.segment(a.segment).resolution(a.resolution).showAxis(a.showAxis).useRelative(a.relativeSize).render(),gvinit=!1}),chr.on("selectorchange",function(d){scope.updateSelectorMap(d),scope.$emit("selectorchange",d)}),scope.$on("geneview:updateselector",function(e,d){chr.moveSelectorTo(d.start,d.stop),updateRender()});var gvinit=!1,init=function(){var selectionModel=chr.getSelections();scope.displayGeneview=!0,scope.articleStats=scope.articleStats===!0?!0:"true"===scope.articleStats,scope.phenotypes=scope.phenotypes===!0?!0:"true"===scope.phenotypes,scope.detailWindow=scope.detailWindow===!0?!0:"true"===scope.detailWindow,scope.selectorStart=+selectionModel[0].start,scope.selectorEnd=+selectionModel[0].stop,scope.sensitivity=getSensitivityValue(scope.selectorStart,scope.selectorEnd),scope.activeSelection=chr.getSelectedBands(scope.sensitivity),scope.boundFrom=+selectionModel[0].start-scope.sensitivity,scope.boundTo=+selectionModel[0].stop+scope.sensitivity,scope.width=chr.width(),scope.chr=chr.segment(),scope.height=120,scope.showStatus=scope.showStatus===!0?!0:"true"===scope.showStatus,scope.xscale=d3.scale.linear().range([0,+scope.width]).domain([scope.boundFrom,scope.boundTo]),initgvmap(),divParent=d3.select(element[0]).select(".angular-geneview-vis").style("height",scope.height+"px").style("width",scope.width+"px"),divParent.select("svg").remove(),svgTarget=divParent.append("svg").attr("height",scope.height).attr("width",scope.width),geneTip=d3.tip().attr("class","d3-tip").direction("n").offset([-8,0]).html(function(d){var tiptemp='<div class="gene-tip"><span style="color:#ffb006">'+d.gene.symbol+"</span> <div>"+d.gene.desc+"</div></div> ";return tiptemp}),phenoTip=d3.tip().attr("class","d3-tip").direction("w").offset([-15,-35]).html(function(d){var t="";return d.phenotypes.forEach(function(v,i){t+="<div>"+ ++i+". "+v.phenotypeMap.phenotype+"</div>"}),t}),svgTarget.call(geneTip),svgTarget.call(phenoTip),drawStatusBar(),updateStatusText("Initialized")},dwObjects={},calls=0,newestCallID=0;scope.render=function(){if(init(),scope.activeSelection.length>0){updateStatusText("Requesting ...",!1),drawScale(),drawBands(scope.activeSelection),drawSensitivityBorders();var callid=new CallID(++calls);scope.geneLoadPromise=geneLoader.getGenes(scope.chr,scope.boundFrom,scope.boundTo,callid,function(data,id){if(!(newestCallID>id)){if(0===data.length)return void updateStatusText("No Data",!1);if("undefined"==typeof data.err){var geneDataSet=geneManager.process(data,scope.boundFrom,scope.boundTo),maxTrack=d3.max(geneDataSet,function(d){return d.track});drawGenes(geneDataSet),updateContainerHeights(maxTrack),scope.phenotypes&&drawPhenotypes(geneDataSet,currentHeights),scope.detailWindow&&drawDetailWindow();var s=scope.boundFrom<0?0:scope.boundFrom,e=scope.boundTo>scope.selectorEnd?scope.selectorEnd:scope.boundTo;updateStatusText("Loaded: CHR:"+scope.chr+" ["+s+": "+e+"] Genes: "+geneDataSet.length),scope.articleStats&&articleStatLoader.getArticleCount(extractGeneSymbol(geneDataSet),function(aCount){scope.articleData=processGeneArticleData(geneDataSet,aCount)})}else updateStatusText(data.err)}}),newestCallID=callid.id}else updateStatusText("No active selectors")}}function controller($scope){this.getXscale=function(){return $scope.xscale}}return{controller:controller,link:link,restrict:"E",transclude:!0,scope:{chr:"@",showStatus:"@",articleStats:"@",phenotypes:"@",detailWindow:"@"},template:"<div class='chromosome'></div><div class='angular-geneview-vis' ng-show='displayGeneview' cg-busy='{promise:geneLoadPromise, message:&quot; Retrieving Data &quot;}'></div>"}}])}(),function(){angular.module("geneview").directive("articleView",["articleStatLoader",function(articleStatLoader){return{restrict:"AE",require:"^geneview",scope:{data:"=",width:"="},link:function(scope,element,attrs,geneviewAPI){var xscale,articleTip,height=60,margin={top:5,right:20,bottom:8,left:20},ylAxis=d3.svg.axis().orient("right").ticks(4),target=d3.select(element[0]).append("svg").classed("article-view",!0).attr("height",height),g=target.append("g").classed("article-scale",!0).attr("transform","translate("+margin.left+","+margin.top+")");target.append("text").text("Article Count").attr("transform","translate(10,"+(height-3)+") rotate(-90)");var line=d3.svg.line(),yscale=d3.scale.linear().range([margin.top,height-margin.bottom]);scope.$watch("data",function(data){if("undefined"!=typeof data){target.attr("width",scope.width),data.sort(function(a,b){return a.midLocation<b.midLocation?-1:a.midLocation>b.midLocation?1:0});var maxArticleCount=d3.max(data,function(d){return d.articleCount});yscale.domain([0,maxArticleCount]),xscale=geneviewAPI.getXscale(),ylAxis.scale(yscale),g.call(ylAxis),line.x(function(d){return xscale(d.midLocation)}).y(function(d){return yscale(d.articleCount)}),target.selectAll(".line").remove(),target.selectAll(".article-dots").remove(),target.append("path").datum(data).classed("line",!0).attr("d",line);var gene=target.append("g").classed("article-dots",!0).selectAll("g").data(data).enter().append("g");gene.append("circle").attr("r",3).attr("cx",function(d){return xscale(d.midLocation)}).attr("cy",function(d){return yscale(d.articleCount)}).attr("fill","orange"),articleTip=d3.tip().attr("class","d3-tip").direction("w").offset([0,-10]).html(function(d){var tiptemp='<div class="gene-tip"><span style="color:#3d91c0">'+d.gene+"</span> <div>"+d.articleCount+"</div></div> ";return tiptemp}),target.call(articleTip),gene.on("mouseover",function(d){var ge=d3.select(this).select("circle");articleTip.show(d),ge.attr("fill","red")}),gene.on("mouseout",function(d){var ge=d3.select(this).select("circle");articleTip.hide(d),ge.attr("fill","orange")})}})}}}])}()}();